import React from 'react';
import './Character.css';

const CharacterCard = ({ character, isOwn, onRevealCard, revealedCards = [] }) => {
  const cardTypes = {
    profession: '–ü—Ä–æ—Ñ–µ—Å—Å–∏—è',
    hobby: '–•–æ–±–±–∏',
    healthProblem: '–ü—Ä–æ–±–ª–µ–º–∞ –∑–¥–æ—Ä–æ–≤—å—è',
    specialSkill: '–û—Å–æ–±—ã–π –Ω–∞–≤—ã–∫',
    phobia: '–§–æ–±–∏—è',
    additionalInfo: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
    age: '–í–æ–∑—Ä–∞—Å—Ç',
    gender: '–ü–æ–ª',
    bodyType: '–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ'
  };

  const getCardIcon = (cardType) => {
    const icons = {
      profession: 'üëî',
      hobby: 'üéØ',
      healthProblem: 'üè•',
      specialSkill: '‚≠ê',
      phobia: 'üò∞',
      additionalInfo: '‚ÑπÔ∏è',
      age: 'üìÖ',
      gender: 'üë§',
      bodyType: 'üèãÔ∏è'
    };
    return icons[cardType] || 'üìã';
  };

  const handleRevealCard = (cardType) => {
    if (isOwn && !revealedCards.includes(cardType)) {
      onRevealCard(cardType);
    }
  };

  return (
    <div className="character-card hologram">
      <div className="character-grid">
        {Object.entries(cardTypes).map(([cardType, cardName]) => {
          const isRevealed = revealedCards.includes(cardType);
          const cardValue = character[cardType];

          return (
            <div
              key={cardType}
              className={`character-trait ${isRevealed ? 'revealed' : 'hidden'} ${isOwn ? 'own' : ''}`}
              onClick={() => handleRevealCard(cardType)}
            >
              <div className="trait-header">
                <span className="trait-icon">{getCardIcon(cardType)}</span>
                <span className="trait-name">{cardName}</span>
              </div>
              
              <div className="trait-content">
                {isRevealed ? (
                  <span className="trait-value">{cardValue}</span>
                ) : (
                  <div className="trait-hidden">
                    {isOwn ? (
                      <div className="hidden-card-own">
                        <div className="hidden-preview" title={cardValue}>
                          {cardValue}
                        </div>
                        <button
                          className="btn-reveal"
                          onClick={(e) => {
                            e.stopPropagation();
                            onRevealCard(cardType);
                          }}
                        >
                          üîì –û–¢–ö–†–´–¢–¨
                        </button>
                      </div>
                    ) : (
                      <div className="hidden-card-other">
                        <span className="hidden-placeholder">???</span>
                      </div>
                    )}
                  </div>
                )}
              </div>
            </div>
          );
        })}
      </div>
      
      {isOwn && (
        <div className="character-summary">
          <p>
            üí° <strong>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</strong> –©–µ–ª–∫–Ω–∏—Ç–µ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ –∏–ª–∏ –∫–Ω–æ–ø–∫–µ "–û–¢–ö–†–´–¢–¨", 
            —á—Ç–æ–±—ã —Ä–∞—Å–∫—Ä—ã—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –≤—Å–µ–º –∏–≥—Ä–æ–∫–∞–º. –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ, 
            —á—Ç–æ –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å –¥—Ä—É–≥–∏—Ö –≤ —Å–≤–æ–µ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –≤—ã–∂–∏–≤–∞–Ω–∏—è!
          </p>
          <div className="progress-info">
            <span>–û–¢–ö–†–´–¢–û –ö–ê–†–¢–û–ß–ï–ö:</span>
            <span>{revealedCards.length}/{Object.keys(cardTypes).length}</span>
          </div>
        </div>
      )}
    </div>
  );
};

export default CharacterCard;